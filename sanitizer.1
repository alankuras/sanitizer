.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.
.TH USAGE: MAIN.PY [-H] [--NAMESPACES NAMESPACES] [--PREVIOUS] [--CONFIG "1" "June 2022" "usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config CONFIG]" "User Commands"
.SH NAME
usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config \- manual page for usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config CONFIG]
.SH DESCRIPTION
usage: main.py [\-h] [\-\-namespaces NAMESPACES] [\-\-previous] [\-\-config CONFIG]
.IP
[\-\-zip] [\-\-chown] [\-\-uncompressed]
[\-\-since SINCE | \fB\-\-since\-time\fR SINCE_TIME] \fB\-\-logs_location\fR
LOGS_LOCATION (\fB\-\-sanitize\fR | \fB\-\-dump\fR)
.PP
This tool does the sanitization of logs
.PP
Usage:
.PP
python sanitizer/main.py \fB\-s\fR \fB\-l\fR \fI\,/tmp\/\fP
.IP
above will sanitize and put the logs into \fI\,/tmp\/\fP from all namespaces defined in config.cfg
.PP
python sanitizer/main.py \fB\-d\fR \fB\-l\fR .
.IP
above will dump logs without sanitization creating the folder structure in your current working directory
.PP
python sanitizer/main.py \fB\-s\fR \fB\-l\fR \fI\,/tmp\/\fP \fB\-n\fR "kube\-public, kube\-system"
.IP
above will sanitize and put the logs into \fI\,/tmp\/\fP from namespaces kube\-public and kube\-system, ignoring namespaces from config.cfg
.PP
additional examples:
python sanitizer/main.py \fB\-s\fR \fB\-l\fR . \fB\-\-since\fR 5h \fB\-\-config\fR ./config.cfg
python sanitizer/main.py \fB\-s\fR \fB\-l\fR \fI\,/tmp\/\fP \fB\-\-since\fR=\fI\,60m\/\fR
python sanitizer/main.py \fB\-s\fR \fB\-l\fR \fI\,/tmp\/\fP \fB\-\-since\-time\fR=\fI\,2022\-02\-21T10\/\fR:00:00.00Z
.PP
# you can dump/sanitize both logs, current and previous, and will be added to the same zip file
python3 sanitizer/main.py \fB\-d\fR \fB\-l\fR . \fB\-\-zip\fR \fB\-\-since\fR=\fI\,60m\/\fR
python3 sanitizer/main.py \fB\-d\fR \fB\-l\fR . \fB\-\-since\fR=\fI\,240m\/\fR \fB\-\-previous\fR \fB\-\-zip\fR \fB\-\-chown\fR
.PP
# dump logs from default namespace, creating files in your cwd, for the last 4 hours, without gzip compression of each file, adding everything to zip, changing the owner
python3 sanitizer/main.py \fB\-\-dump\fR \fB\-n\fR default \fB\-l\fR . \fB\-\-since\fR=\fI\,240m\/\fR \fB\-\-zip\fR \fB\-\-chown\fR \fB\-\-uncompressed\fR
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-namespaces\fR NAMESPACES, \fB\-n\fR NAMESPACES
Alternative namespace list, namespaces from config
will be ignored
.TP
\fB\-\-previous\fR, \fB\-p\fR
dump pod logs (stdout) for a previous instantiation of
a container
.TP
\fB\-\-config\fR CONFIG, \fB\-c\fR CONFIG
Alternative config file
.TP
\fB\-\-zip\fR, \fB\-z\fR
Compress the directory with logs afterwards
.TP
\fB\-\-chown\fR, \fB\-ch\fR
Only works with \fB\-\-zip\fR/\-z, changing the uid:gid of a
zip file as specified in config
.TP
\fB\-\-uncompressed\fR, \fB\-u\fR
By default dump and sanitization saves logs as
compressed gzip files, this forbids the compression
.TP
\fB\-\-since\fR SINCE
Only return logs newer than a relative duration like
5s, 2m, or 3h. Only one of since\-time / since may be
used
.TP
\fB\-\-since\-time\fR SINCE_TIME
Only return logs after a specific date (RFC3339). Only
one of since\-time / since may be used
.SS "mandatory arguments:"
.TP
\fB\-\-logs_location\fR LOGS_LOCATION, \fB\-l\fR LOGS_LOCATION
Path to directory where logs will be created
.TP
\fB\-\-sanitize\fR, \fB\-s\fR
Dump and sanitize logs
.TP
\fB\-\-dump\fR, \fB\-d\fR
Dump only (without sanitization)
.IP
[\-\-zip] [\-\-chown] [\-\-uncompressed]
[\-\-since SINCE | \fB\-\-since\-time\fR SINCE_TIME] \fB\-\-logs_location\fR
LOGS_LOCATION (\fB\-\-sanitize\fR | \fB\-\-dump\fR)
.PP
main.py: error: the following arguments are required: \fB\-\-logs_location\fR/\-l
.SH "SEE ALSO"
The full documentation for
.B usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config
is maintained as a Texinfo manual.  If the
.B info
and
.B usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config
programs are properly installed at your site, the command
.IP
.B info usage: main.py [-h] [--namespaces NAMESPACES] [--previous] [--config
.PP
should give you access to the complete manual.
